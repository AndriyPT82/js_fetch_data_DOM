{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","ok","headers","get","includes","json","Promise","reject","Error","status","statusText","getPhones","getPhoneDetails","endPoint","generateList","phonesList","body","document","querySelector","ul","createElement","append","map","phone","li","innerText","name","id","getPhonesDetails","idsList","PhoneDetails","all","phoneIds","phonesDetails","console","log","catch","warn"],"mappings":";AAAA,aAGA,IAAMA,EAAN,gEAGMC,EAAU,SAACC,GACRC,OAAAA,MAASH,GAAAA,OAAAA,GAAWE,OAAAA,IACxBE,KAAK,SAAAC,GACA,OAACA,EAASC,GAMTD,EAASE,QAAQC,IAAI,gBAAgBC,SAAS,oBAM5CJ,EAASK,OALPC,QAAQC,OAAO,IAAIC,MACxB,iCAPKF,QAAQC,OAAO,IAAIC,MACrBR,GAAAA,OAAAA,EAASS,OAAYT,OAAAA,OAAAA,EAASU,iBAcrCC,EAAY,WAAMf,OAAAA,EAAQ,iBAC1BgB,EAAkB,SAACC,GAAajB,OAAAA,EAAmBiB,WAAAA,OAAAA,EAAjC,WAQxB,SAASC,EAAaC,GACdC,IAAAA,EAAOC,SAASC,cAAc,QAC9BC,EAAKF,SAASG,cAAc,MAI3BL,OAFPC,EAAKK,OAAOF,GAELJ,EAAWO,IAAI,SAAAC,GACdC,IAAAA,EAAKP,SAASG,cAAc,MAK3BG,OAHPC,EAAGC,UAAYF,EAAMG,KACrBP,EAAGE,OAAOG,GAEHD,EAAMI,KAIjB,SAASC,EAAiBC,GAClBC,IAAAA,EAAeD,EAAQP,IAAI,SAAAK,GAAMf,OAAAA,EAAgBe,KAEhDrB,OAAAA,QAAQyB,IAAID,GAzBrBnB,IACGZ,KAAK,SAAAC,GAAYc,OAAAA,EAAad,KAC9BD,KAAK,SAAAiC,GAAYJ,OAAAA,EAAiBI,KAClCjC,KAAK,SAAAkC,GAAiBC,OAAAA,QAAQC,IAAIF,KAClCG,MAAM,WAAMF,OAAAA,QAAQG,KAAK,IAAI7B","file":"main.218b4cce.js","sourceRoot":"../src","sourcesContent":["'use strict';\n/* eslint-disable no-console */\n\nconst BASE_URL = `\n  https://mate-academy.github.io/phone-catalogue-static/api`;\n\nconst request = (url) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error(\n          `${response.status} - ${response.statusText}`\n        ));\n      };\n\n      if (!response.headers.get('content-type').includes('application/json')) {\n        return Promise.reject(new Error(\n          'content-type is not correcte'\n        ));\n      };\n\n      return response.json();\n    });\n};\n\nconst getPhones = () => request('/phones.json');\nconst getPhoneDetails = (endPoint) => request(`/phones/${endPoint}.json`);\n\ngetPhones()\n  .then(response => generateList(response))\n  .then(phoneIds => getPhonesDetails(phoneIds))\n  .then(phonesDetails => console.log(phonesDetails))\n  .catch(() => console.warn(new Error()));\n\nfunction generateList(phonesList) {\n  const body = document.querySelector('body');\n  const ul = document.createElement('ul');\n\n  body.append(ul);\n\n  return phonesList.map(phone => {\n    const li = document.createElement('li');\n\n    li.innerText = phone.name;\n    ul.append(li);\n\n    return phone.id;\n  });\n}\n\nfunction getPhonesDetails(idsList) {\n  const PhoneDetails = idsList.map(id => getPhoneDetails(id));\n\n  return Promise.all(PhoneDetails);\n}\n"]}